{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paulo\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\my-blog\\\\client\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { UserContext } from \"../UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  const {\n    setUserInfo\n  } = useContext(UserContext);\n  async function login(ev) {\n    ev.preventDefault();\n    try {\n      const response = await fetch('http://localhost:4000/login', {\n        method: 'POST',\n        body: JSON.stringify({\n          username,\n          password\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n      if (response.ok) {\n        response.json().then(userInfo => {\n          setUserInfo(userInfo);\n          setRedirect(true);\n        });\n        const data = await response.json();\n        console.log('Login successful:', data);\n        setRedirect(true);\n      } else {\n        const error = await response.json();\n        console.error('Login failed:', error);\n      }\n    } catch (err) {\n      console.error('Error during login:', err);\n    }\n  }\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"login\",\n    onSubmit: login,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: ev => setUsername(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: ev => setPassword(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginPage, \"LA8c2h07KUkEE8TJL/zG+UM4GGk=\");\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useContext","useState","Navigate","UserContext","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","redirect","setRedirect","setUserInfo","login","ev","preventDefault","response","fetch","method","body","JSON","stringify","headers","credentials","ok","json","then","userInfo","data","console","log","error","err","to","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","children","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/paulo/OneDrive/Área de Trabalho/my-blog/client/src/pages/LoginPage.js"],"sourcesContent":["import { useContext, useState } from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport { UserContext } from \"../UserContext\";\r\n\r\nexport default function LoginPage(){\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [redirect, setRedirect] = useState(false);\r\n    const {setUserInfo} = useContext(UserContext);\r\n\r\n    async function login(ev) {\r\n        ev.preventDefault();\r\n        try {\r\n            const response = await fetch('http://localhost:4000/login', {\r\n                method: 'POST',\r\n                body: JSON.stringify({ username, password }),\r\n                headers: { 'Content-Type': 'application/json' },\r\n                credentials: 'include',\r\n            });\r\n    \r\n            if (response.ok) {\r\n                response.json().then(userInfo =>{\r\n                    setUserInfo(userInfo);\r\n                    setRedirect(true);\r\n                })\r\n                const data = await response.json();\r\n                console.log('Login successful:', data);\r\n                setRedirect(true);\r\n               \r\n            } else {\r\n                const error = await response.json();\r\n                console.error('Login failed:', error);\r\n            }\r\n                       \r\n        } catch (err) {\r\n            console.error('Error during login:', err);\r\n        }\r\n    }\r\n    \r\n    if(redirect){\r\n        return <Navigate to={'/'}/>\r\n    }\r\n    return(\r\n        <form className=\"login\" onSubmit={login}>\r\n            <h1>Login</h1>\r\n            <input\r\n             type=\"text\"\r\n             placeholder=\"Username\"\r\n             value={username}\r\n             onChange={ev => setUsername(ev.target.value)}\r\n              />\r\n            <input \r\n            type=\"password\" \r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={ev => setPassword(ev.target.value)}\r\n            />\r\n            <button>Login</button>\r\n        </form>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}